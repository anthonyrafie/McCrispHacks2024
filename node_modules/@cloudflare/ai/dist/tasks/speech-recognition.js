import { Tensor, TensorType } from "../tensor";
export class AiSpeechRecognition {
    constructor(inputs, modelSettings) {
        this.schema = {
            input: {
                oneOf: [
                    { type: "string", format: "binary" },
                    {
                        type: "object",
                        properties: {
                            audio: {
                                type: "array",
                                items: {
                                    type: "number",
                                },
                            },
                        },
                    },
                ],
            },
            output: {
                type: "object",
                contentType: "application/json",
                properties: {
                    text: {
                        type: "string",
                    },
                    word_count: {
                        type: "number",
                    },
                    words: {
                        type: "array",
                        items: {
                            type: "object",
                            properties: {
                                word: {
                                    type: "string",
                                },
                                start: {
                                    type: "number",
                                },
                                end: {
                                    type: "number",
                                },
                            },
                        },
                    },
                },
                required: ["text"],
            },
        };
        this.inputs = inputs;
        this.modelSettings = modelSettings;
    }
    preProcessing() {
        this.preProcessedInputs = this.inputs;
    }
    generateTensors() {
        this.tensors = [
            new Tensor(TensorType.Uint8, this.preProcessedInputs.audio, {
                shape: [1, this.preProcessedInputs.audio.length],
                name: "audio",
            }),
        ];
    }
    postProcessing(response) {
        if (this.modelSettings.postProcessingFunc) {
            this.postProcessedOutputs = this.modelSettings.postProcessingFunc(response);
        }
        else {
            this.postProcessedOutputs = { text: response.name.value[0].trim() };
        }
    }
}
