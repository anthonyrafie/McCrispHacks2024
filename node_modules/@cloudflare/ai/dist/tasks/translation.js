import { Tensor, TensorType } from "../tensor";
export class AiTranslation {
    constructor(inputs, modelSettings) {
        this.schema = {
            input: {
                type: "object",
                properties: {
                    text: {
                        type: "string",
                    },
                    source_lang: {
                        type: "string",
                        default: "en",
                    },
                    target_lang: {
                        type: "string",
                    },
                },
                required: ["text", "target_lang"],
            },
            output: {
                type: "object",
                contentType: "application/json",
                properties: {
                    translated_text: {
                        type: "string",
                    },
                },
            },
        };
        this.inputs = inputs;
        this.modelSettings = modelSettings;
    }
    preProcessing() {
        this.preProcessedInputs = this.inputs;
    }
    generateTensors() {
        this.tensors = [
            new Tensor(TensorType.String, [this.preProcessedInputs.text], {
                shape: [1, 1],
                name: "text",
            }),
            new Tensor(TensorType.String, [this.preProcessedInputs.source_lang || "en"], {
                shape: [1, 1],
                name: "source_lang",
            }),
            new Tensor(TensorType.String, [this.preProcessedInputs.target_lang], {
                shape: [1, 1],
                name: "target_lang",
            }),
        ];
    }
    postProcessing(response) {
        this.postProcessedOutputs = { translated_text: response.name.value[0] };
    }
}
